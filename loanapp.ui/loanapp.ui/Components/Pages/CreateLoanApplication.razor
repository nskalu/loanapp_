@page "/createloan"
@rendermode InteractiveServer
@using loanapp.application.Commands.Loans
@using MediatR
@inject IMediator Mediator
@inject NavigationManager Navigation

<h3>Create Loan Application</h3>

@if (!string.IsNullOrEmpty(StatusMessage))
{
    <div class="alert @StatusClass">@StatusMessage</div>
}

<EditForm EditContext="LoanFormContext" FormName="CreateLoanForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Applicant Name</label>
        <InputText class="form-control" @bind-Value="LoanModel.ApplicantName" />
        <ValidationMessage For="@(() => LoanModel.ApplicantName)" />
    </div>

    <div class="mb-3">
        <label>Loan Amount</label>
        <InputNumber class="form-control" @bind-Value="LoanModel.LoanAmount" />
        <ValidationMessage For="@(() => LoanModel.LoanAmount)" />
    </div>

    <div class="mb-3">
        <label>Loan Term (months)</label>
        <InputNumber class="form-control" @bind-Value="LoanModel.LoanTerm" />
        <ValidationMessage For="@(() => LoanModel.LoanTerm)" />
    </div>

    <div class="mb-3">
        <label>Interest Rate (%)</label>
        <InputNumber class="form-control" @bind-Value="LoanModel.InterestRate" />
        <ValidationMessage For="@(() => LoanModel.InterestRate)" />
    </div>

    <button type="submit" class="btn btn-primary" @onclick="Submit">Submit</button>
</EditForm>

@code {
        private loanapp.application.Commands.Loans.CreateLoanApplication.Command LoanModel
    = new application.Commands.Loans.CreateLoanApplication.Command();

    private string ApplicantName;
    private int LoanTerm;
    private decimal InterestRate;
    private decimal LoanAmount;


    private EditContext LoanFormContext;

    private string StatusMessage = string.Empty;
    private string StatusClass = "";

    protected override void OnInitialized()
    {
        // Associate the EditContext with the model
        LoanFormContext = new EditContext(LoanModel);
    }

    private async Task Submit()
    {
        if (!LoanFormContext.Validate())
        {
            // Form is invalid, do not submit
            return;
        }

        try
        {
            var response = await Mediator.Send(LoanModel);

            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                StatusMessage = $"Loan application created successfully! ID: {response.LoanApplicationId}";
                StatusClass = "alert-success";

                // Reset the model and EditContext after success
                LoanModel = new loanapp.application.Commands.Loans.CreateLoanApplication.Command();
                LoanFormContext = new EditContext(LoanModel);

                Navigation.NavigateTo("/loanapplications");
            }
            else
            {
                StatusMessage = response.ErrorMessage;
                StatusClass = "alert-danger";
            }
        }
        catch (Exception)
        {
            StatusMessage = "An unexpected error occurred.";
            StatusClass = "alert-danger";
        }
    }
}
